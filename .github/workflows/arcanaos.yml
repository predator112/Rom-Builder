name: projectarcana-aosp
on: 
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Sync Rom
      uses: NFS86/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USERNAME }}
        pass: ${{ secrets.PASSWORD }}
        command: |
          set -e
          my_dir="$(pwd)"
          rom_name="$(grep init $my_dir/arcana.sh -m 1 | cut -d / -f 4)"
          command="$(head $my_dir/arcana.sh -n $(expr $(grep '# build rom' $my_dir/arcana.sh -n | cut -f1 -d:) - 1))"
          only_sync=$(grep 'repo sync' $my_dir/arcana.sh)
          mkdir -p $my_dir/$rom_name
          cd $my_dir/$rom_name
          rm -rf .repo/local_manifests
          bash -c "$command"

    - name: Building Rom
      uses: NFS86/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USERNAME }}
        pass: ${{ secrets.PASSWORD }}
        args: "-tt"
        command: |
          set -e
          finderr() {
            curl -s https://api.telegram.org/bot$tg_token/sendMessage -d chat_id=$tg_id -d text="==============================%0A<b>$Device Building Rom $rom_name Failed [‚ùå]</b>%0A==============================" \
            curl -s https://api.telegram.org/bot$tg_token/sendSticker -d chat_id=$tg_id -d sticker="CAACAgIAAx0CXjGT1gACDRRhYsUKSwZJQFzmR6eKz2aP30iKqQACPgADr8ZRGiaKo_SrpcJQIQQ" \
            exit 1
          }
          my_dir="$pwd"
          rom_name="$(grep init $my_dir/arcana.sh -m 1 | cut -d / -f 4)"
          device=$(grep unch $my_dir/arcana.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
          command="$(tail $my_dir/arcana.sh -n +$(expr $(grep 'build/envsetup.sh' $my_dir/arcana.sh -n | cut -f1 -d:) - 1)| head -n -1 | grep -v '# end')"
          rel_date="$(date "+%Y%m%d")"
          ROMZIP="out/target/product/$device/*$rel_date*.zip"
          cd $my_dir/$rom_name
          export CCACHE_EXEC=/usr/bin/ccache
          export USE_CCACHE=1
          export ALLOW_MISSING_DEPENDENCIES=true
          ccache -o compression=true
          ccache -o compression_level=1
          ccache -o limit_multiple=1
          ccache -o max_size=150G
          ccache -z
          bash -c "$command"
          if ! [ -a "$ROMZIP" ]; then
            finderr
          fi

    - name: Push Rom
      uses: NFS86/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USERNAME }}
        pass: ${{ secrets.PASSWORD }}
        args: "-tt"
        command: |
          my_dir="$pwd"
          rom_name="$(grep init $my_dir/arcana.sh -m 1 | cut -d / -f 4)"
          device="$(grep unch $my_dir/arcana.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)"
          rel_date="$(date "+%Y%m%d")"
          output="out/target/product/$device/*$rel_date*.zip"
          ota="out/target/product/$device/*ota*.zip"
          cd $my_dir/$rom_name
          rclone copy --drive-chunk-size 256M --stats 1s $output NFS:staging/$rom_name -P
          curl -s -X POST "https://api.telegram.org/bot${tg_token}/sendMessage" -d chat_id="${tg_id}" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="<b>Download link:</b> https://needforspeed.projek.workers.dev/staging/$rom_name/$(cd out/target/product/$device && ls *$rel_date*.zip)"
          rm -rf $my_dir/$rom_name/out/target/product/$device
